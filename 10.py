import streamlit as st



st.title("Подготовка сетки для FEniCS")


st.write(
    "Прежде чем можно будет использовать сетку в FEniCS, необходимо преобразовать ее в формат, который может быть использован в FEniCS. В GMSH это можно сделать, используя инструменты экспорта.")

st.write("#### Шаг 1: Генерация сетки")
st.write(
    "Прежде чем можно будет экспортировать сетку в FEniCS, необходимо сгенерировать ее в GMSH, используя описанные в предыдущем слайде шаги.")

st.write("#### Шаг 2: Экспорт в формат XML")
st.write(
    "После того, как сетка сгенерирована, ее можно экспортировать в формат XML, который может бытьимпортирован в FEniCS. Для этого в GMSH нужно выбрать меню `File -> Export`, выбрать формат `FEniCS XML (.xml)`, задать имя файла и нажать кнопку `Save`.")

st.write("#### Шаг 3: Импорт в FEniCS")
st.write("После экспорта сетки в формат XML в GMSH, ее можно импортировать в FEniCS, используя модуль `dolfin`.")

st.write("Ниже приведен пример кода на Python, который загружает сетку из файла XML и создает объект `Mesh` в FEniCS:")
st.code("""
    from dolfin import *

    # Загрузка сетки из файла XML
    mesh = Mesh("mesh.xml")

    # Визуализация сетки
    plot(mesh)
    interactive()
    """)

st.write("#### Пример")
st.write(
    "Ниже приведен пример кода на языке GMSH, который определяет квадратную область и генерирует сетку на основе треугольных элементов, и экспортирует ее в формат XML для использования в FEniCS:")

st.code("""
    // Определение квадратной области
    Point(1) = {0, 0, 0, 1.0};
    Point(2) = {1, 0, 0, 1.0};
    Point(3) = {1, 1, 0, 1.0};
    Point(4) = {0, 1, 0, 1.0};
    Line(1) = {1, 2};
    Line(2) = {2, 3};
    Line(3) = {3, 4};
    Line(4) = {4, 1};
    Plane Surface(1) = {1, 2, 3, 4};

    // Генерация сетки
    Mesh.CharacteristicLengthMax = 0.2;
    Mesh 2;

    // Экспорт в формат XML
    Mesh.Format = 2;
    Mesh.Save = "mesh.xml";
    """)

st.write("После экспорта сетки в формат XML, ее можно загрузить и использовать в FEniCS.")
